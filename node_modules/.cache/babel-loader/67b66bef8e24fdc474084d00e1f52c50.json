{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hcw/vueProjects/gmall/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/hcw/vueProjects/gmall/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { getRegisterQRCode, userRegister, userLogin, reqAutoLogin as _reqAutoLogin, reqGetLoginOut as _reqGetLoginOut } from '@/api';\nimport { setToken } from '@/utils/token.js';\nvar state = {\n  QRCode: '',\n  token: '',\n  userInfo: {}\n};\nvar mutations = {\n  GETREGISTERQRCODE: function GETREGISTERQRCODE(state, QRCode) {\n    state.QRCode = QRCode;\n  },\n  USERLOGIN: function USERLOGIN(state, token) {\n    state.token = token;\n  },\n  GETUSERINFO: function GETUSERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n  GETLOGINOUT: function GETLOGINOUT(state) {\n    state.token = '';\n    state.userInfo = {};\n  }\n};\nvar actions = {\n  // 获取二维码\n  RegisterQRCode: function RegisterQRCode(_ref, phone) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var commit, result;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return getRegisterQRCode(phone);\n\n            case 3:\n              result = _context.sent;\n\n              // console.log(result);\n              if (result.code == 200) {\n                commit('GETREGISTERQRCODE', result.data);\n                console.log(result);\n              } else {\n                alert(error);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  // 注册用户\n  postUserRegister: function postUserRegister(_ref2, userData) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var commit, result;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return userRegister(userData);\n\n            case 3:\n              result = _context2.sent;\n              console.log(result);\n\n              if (!(result, code == 200)) {\n                _context2.next = 9;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", true);\n\n            case 9:\n              return _context2.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  // 用户登录\n  postUserLogin: function postUserLogin(_ref3, userdata) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var commit, result;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              console.log();\n              _context3.next = 4;\n              return userLogin(userdata);\n\n            case 4:\n              result = _context3.sent;\n\n              if (!(result.code == 200)) {\n                _context3.next = 11;\n                break;\n              }\n\n              commit('USERLOGIN', result.data.token); // 持久化存储token\n              // console.log(result.data.token);\n\n              setToken(result.data.token);\n              return _context3.abrupt(\"return\", 'ok');\n\n            case 11:\n              return _context3.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  // 获取用户信息\n  reqAutoLogin: function reqAutoLogin(_ref4) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var commit, result;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return _reqAutoLogin();\n\n            case 3:\n              result = _context4.sent;\n\n              if (!(result.code == 200)) {\n                _context4.next = 9;\n                break;\n              }\n\n              commit('GETUSERINFO', result.data);\n              return _context4.abrupt(\"return\", 'ok');\n\n            case 9:\n              return _context4.abrupt(\"return\", Promise.reject(new Error('getUserInfoFaile')));\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  // 退出登录\n  reqGetLoginOut: function reqGetLoginOut(_ref5) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var commit, result;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return _reqGetLoginOut();\n\n            case 3:\n              result = _context5.sent;\n\n              if (!(result.code == 200)) {\n                _context5.next = 10;\n                break;\n              }\n\n              commit('GETLOGINOUT');\n              localStorage.removeItem('TOKEN');\n              return _context5.abrupt(\"return\", 'ok');\n\n            case 10:\n              return _context5.abrupt(\"return\", Promise.reject(new Error('reqGetLoginOutFaile')));\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  }\n};\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"names":["getRegisterQRCode","userRegister","userLogin","reqAutoLogin","reqGetLoginOut","setToken","state","QRCode","token","userInfo","mutations","GETREGISTERQRCODE","USERLOGIN","GETUSERINFO","GETLOGINOUT","actions","RegisterQRCode","phone","commit","result","code","data","console","log","alert","error","postUserRegister","userData","Promise","reject","Error","postUserLogin","userdata","localStorage","removeItem","getters"],"sources":["/Users/hcw/vueProjects/gmall/src/store/user/index.js"],"sourcesContent":["import { getRegisterQRCode, userRegister, userLogin, reqAutoLogin, reqGetLoginOut } from '@/api'\nimport { setToken } from '@/utils/token.js'\nconst state = {\n  QRCode: '',\n  token: '',\n  userInfo: {}\n}\nconst mutations = {\n  GETREGISTERQRCODE (state, QRCode) {\n    state.QRCode = QRCode\n  },\n  USERLOGIN (state, token) {\n    state.token = token\n  },\n  GETUSERINFO (state, userInfo) {\n    state.userInfo = userInfo\n  },\n  GETLOGINOUT (state) {\n    state.token = ''\n    state.userInfo = {}\n  }\n}\nconst actions = {\n  // 获取二维码\n  async RegisterQRCode ({ commit }, phone) {\n    // console.log(1);\n    let result = await getRegisterQRCode(phone)\n    // console.log(result);\n    if (result.code == 200) {\n      commit('GETREGISTERQRCODE', result.data)\n      console.log(result);\n    } else {\n      alert(error)\n    }\n  },\n  // 注册用户\n  async postUserRegister ({ commit }, userData) {\n    let result = await userRegister(userData)\n    console.log(result);\n    if (result, code == 200) {\n      return true\n    } else {\n      return Promise.reject(new Error('faile'))\n    }\n  },\n  // 用户登录\n  async postUserLogin ({ commit }, userdata) {\n    console.log();\n    let result = await userLogin(userdata)\n    // console.log(result);\n    if (result.code == 200) {\n      commit('USERLOGIN', result.data.token)\n      // 持久化存储token\n      // console.log(result.data.token);\n      setToken(result.data.token)\n      return 'ok'\n    } else {\n      return Promise.reject(new Error('faile'))\n    }\n  },\n  // 获取用户信息\n  async reqAutoLogin ({ commit }) {\n    let result = await reqAutoLogin()\n    // console.log(result);\n    if (result.code == 200) {\n      commit('GETUSERINFO', result.data)\n      return 'ok'\n    } else {\n      return Promise.reject(new Error('getUserInfoFaile'))\n    }\n  },\n  // 退出登录\n  async reqGetLoginOut ({ commit }) {\n    let result = await reqGetLoginOut()\n    // console.log(result);\n    if (result.code == 200) {\n      commit('GETLOGINOUT')\n      localStorage.removeItem('TOKEN')\n      return 'ok'\n    } else {\n      return Promise.reject(new Error('reqGetLoginOutFaile'))\n    }\n  }\n\n}\nconst getters = {}\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}