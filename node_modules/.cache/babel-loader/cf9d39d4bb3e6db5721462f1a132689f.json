{"ast":null,"code":"import { reqCartList, reqUpdateCheckCart, reqDeleteCart } from '@/api';\nconst state = {\n  cartList: []\n};\nconst actions = {\n  async getCartList({\n    commit\n  }) {\n    let result = await reqCartList();\n\n    if (result.code == 200) {\n      commit('CARTLIST', result.data);\n    }\n  },\n\n  async updateCheckCart({\n    commit\n  }, {\n    skuId,\n    isChecked\n  }) {\n    let result = await reqUpdateCheckCart(skuId, isChecked);\n\n    if (result.code == 200) {\n      return 'success';\n    }\n\n    return 'fail';\n  },\n\n  async deleteCart({\n    commit\n  }, skuId) {\n    let result = await reqDeleteCart(skuId);\n\n    if (result.code == 200) {\n      return 'success';\n    }\n\n    return 'fail';\n  },\n\n  deleteAllCheckedCartByContext({\n    dispatch,\n    getters\n  }) {\n    let PromiseAll = []; // context:小仓库，commit【提交mutations修改state】，getters【计算属性】 dispatch【派发action】 state【当前数据库】\n\n    getters.cartInfoList.forEach(element => {\n      let promise = element.isChecked == 1 ? dispatch('deleteCart', element.skuId) : '';\n      PromiseAll.push(promise);\n    });\n    console.log(getters.cartInfoList);\n    return Promise.all(PromiseAll);\n  },\n\n  // 全选状态修改\n  updateAllChecked({\n    dispatch,\n    state\n  }, isChecked) {\n    let promiseAll = [];\n    state.cartList[0].cartInfoList.forEach(element => {\n      let promise = dispatch('updateCheckCart', {\n        skuId: element.skuId,\n        isChecked\n      });\n      promiseAll.push(promise);\n    });\n    return Promise.all(promiseAll);\n  }\n\n};\nconst mutations = {\n  CARTLIST(state, cartList) {\n    state.cartList = cartList;\n  }\n\n};\nconst getters = {\n  cartInfoList(state) {\n    return (state.cartList[0] || []).cartInfoList || [];\n  }\n\n};\nexport default {\n  state,\n  actions,\n  mutations,\n  getters\n};","map":{"version":3,"names":["reqCartList","reqUpdateCheckCart","reqDeleteCart","state","cartList","actions","getCartList","commit","result","code","data","updateCheckCart","skuId","isChecked","deleteCart","deleteAllCheckedCartByContext","dispatch","getters","PromiseAll","cartInfoList","forEach","element","promise","push","console","log","Promise","all","updateAllChecked","promiseAll","mutations","CARTLIST"],"sources":["/Users/hcw/vueProjects/gmall/src/store/shopCart/index.js"],"sourcesContent":["import {reqCartList,reqUpdateCheckCart,reqDeleteCart} from '@/api'\n\nconst state = {\n    cartList:[]\n}\nconst actions = {\n    async getCartList({commit}) {\n        let result = await reqCartList()\n        if (result.code == 200) {\n            commit('CARTLIST', result.data)\n        }\n    },\n    async updateCheckCart({commit},{skuId,isChecked}) {\n        let result = await reqUpdateCheckCart(skuId,isChecked)\n        if (result.code == 200) {\n            return 'success'\n        }\n        return 'fail'\n    },\n    async deleteCart({commit}, skuId) {\n        let result = await reqDeleteCart(skuId)\n        if (result.code == 200) {\n            return 'success'\n        }\n        return 'fail'\n    },\n    deleteAllCheckedCartByContext ({ dispatch, getters }) {\n        let PromiseAll = []\n        // context:小仓库，commit【提交mutations修改state】，getters【计算属性】 dispatch【派发action】 state【当前数据库】\n        getters.cartInfoList.forEach(element => {\n          let promise = element.isChecked == 1 ? dispatch('deleteCart', element.skuId) : ''\n          PromiseAll.push(promise)\n        });\n        console.log(getters.cartInfoList);\n        return Promise.all(PromiseAll)\n    },\n    // 全选状态修改\n    updateAllChecked ({ dispatch, state }, isChecked) {\n        let promiseAll = []\n        state.cartList[0].cartInfoList.forEach(element => {\n            let promise = dispatch('updateCheckCart', { skuId: element.skuId, isChecked })\n            promiseAll.push(promise)\n        })\n        return Promise.all(promiseAll)\n    }\n}\nconst mutations = {\n    CARTLIST(state,cartList) {\n        state.cartList = cartList\n    },\n}\nconst getters = {\n    cartInfoList(state) {\n        return (state.cartList[0] || []).cartInfoList||[]\n    }\n}\n\nexport default {\n    state,\n    actions,\n    mutations,\n    getters\n}\n"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,kBAApB,EAAuCC,aAAvC,QAA2D,OAA3D;AAEA,MAAMC,KAAK,GAAG;EACVC,QAAQ,EAAC;AADC,CAAd;AAGA,MAAMC,OAAO,GAAG;EACZ,MAAMC,WAAN,CAAkB;IAACC;EAAD,CAAlB,EAA4B;IACxB,IAAIC,MAAM,GAAG,MAAMR,WAAW,EAA9B;;IACA,IAAIQ,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;MACpBF,MAAM,CAAC,UAAD,EAAaC,MAAM,CAACE,IAApB,CAAN;IACH;EACJ,CANW;;EAOZ,MAAMC,eAAN,CAAsB;IAACJ;EAAD,CAAtB,EAA+B;IAACK,KAAD;IAAOC;EAAP,CAA/B,EAAkD;IAC9C,IAAIL,MAAM,GAAG,MAAMP,kBAAkB,CAACW,KAAD,EAAOC,SAAP,CAArC;;IACA,IAAIL,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;MACpB,OAAO,SAAP;IACH;;IACD,OAAO,MAAP;EACH,CAbW;;EAcZ,MAAMK,UAAN,CAAiB;IAACP;EAAD,CAAjB,EAA2BK,KAA3B,EAAkC;IAC9B,IAAIJ,MAAM,GAAG,MAAMN,aAAa,CAACU,KAAD,CAAhC;;IACA,IAAIJ,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;MACpB,OAAO,SAAP;IACH;;IACD,OAAO,MAAP;EACH,CApBW;;EAqBZM,6BAA6B,CAAE;IAAEC,QAAF;IAAYC;EAAZ,CAAF,EAAyB;IAClD,IAAIC,UAAU,GAAG,EAAjB,CADkD,CAElD;;IACAD,OAAO,CAACE,YAAR,CAAqBC,OAArB,CAA6BC,OAAO,IAAI;MACtC,IAAIC,OAAO,GAAGD,OAAO,CAACR,SAAR,IAAqB,CAArB,GAAyBG,QAAQ,CAAC,YAAD,EAAeK,OAAO,CAACT,KAAvB,CAAjC,GAAiE,EAA/E;MACAM,UAAU,CAACK,IAAX,CAAgBD,OAAhB;IACD,CAHD;IAIAE,OAAO,CAACC,GAAR,CAAYR,OAAO,CAACE,YAApB;IACA,OAAOO,OAAO,CAACC,GAAR,CAAYT,UAAZ,CAAP;EACH,CA9BW;;EA+BZ;EACAU,gBAAgB,CAAE;IAAEZ,QAAF;IAAYb;EAAZ,CAAF,EAAuBU,SAAvB,EAAkC;IAC9C,IAAIgB,UAAU,GAAG,EAAjB;IACA1B,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkBe,YAAlB,CAA+BC,OAA/B,CAAuCC,OAAO,IAAI;MAC9C,IAAIC,OAAO,GAAGN,QAAQ,CAAC,iBAAD,EAAoB;QAAEJ,KAAK,EAAES,OAAO,CAACT,KAAjB;QAAwBC;MAAxB,CAApB,CAAtB;MACAgB,UAAU,CAACN,IAAX,CAAgBD,OAAhB;IACH,CAHD;IAIA,OAAOI,OAAO,CAACC,GAAR,CAAYE,UAAZ,CAAP;EACH;;AAvCW,CAAhB;AAyCA,MAAMC,SAAS,GAAG;EACdC,QAAQ,CAAC5B,KAAD,EAAOC,QAAP,EAAiB;IACrBD,KAAK,CAACC,QAAN,GAAiBA,QAAjB;EACH;;AAHa,CAAlB;AAKA,MAAMa,OAAO,GAAG;EACZE,YAAY,CAAChB,KAAD,EAAQ;IAChB,OAAO,CAACA,KAAK,CAACC,QAAN,CAAe,CAAf,KAAqB,EAAtB,EAA0Be,YAA1B,IAAwC,EAA/C;EACH;;AAHW,CAAhB;AAMA,eAAe;EACXhB,KADW;EAEXE,OAFW;EAGXyB,SAHW;EAIXb;AAJW,CAAf"},"metadata":{},"sourceType":"module"}