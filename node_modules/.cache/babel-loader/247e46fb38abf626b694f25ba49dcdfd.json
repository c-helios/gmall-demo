{"ast":null,"code":"import { reqCategoryList, reqBannerList, reqFloorList } from '@/api';\nconst state = {\n  categoryList: [],\n  bannerList: [],\n  floorList: []\n};\nconst actions = {\n  async categoryList({\n    commit\n  }) {\n    let result = await reqCategoryList();\n\n    if (result.code == 200) {\n      commit('CATEGORYLIST', result.data);\n    }\n  },\n\n  async bannerList({\n    commit\n  }) {\n    let result = await reqBannerList();\n\n    if (result.code == 200) {\n      commit('BANNERLIST', result.data);\n    }\n  },\n\n  async floorList({\n    commit\n  }) {\n    let result = await reqFloorList();\n\n    if (result.code == 200) {\n      commit('FLOORLIST', result.data);\n    }\n  }\n\n};\nconst mutations = {\n  CATEGORYLIST(state, categoryList) {\n    state.categoryList = categoryList;\n  },\n\n  BANNERLIST(state, bannerList) {\n    state.bannerList = bannerList;\n  },\n\n  FLOORLIST(state, floorList) {\n    state.floorList = floorList;\n  }\n\n};\nconst getters = {};\nexport default {\n  // ...\n  state,\n  actions,\n  mutations,\n  getters\n};","map":{"version":3,"names":["reqCategoryList","reqBannerList","reqFloorList","state","categoryList","bannerList","floorList","actions","commit","result","code","data","mutations","CATEGORYLIST","BANNERLIST","FLOORLIST","getters"],"sources":["/Users/hcw/vueProjects/gmall/src/store/home/index.js"],"sourcesContent":["import { reqCategoryList,reqBannerList,reqFloorList } from '@/api'\n\nconst state = {\n    categoryList:[],\n    bannerList:[],\n    floorList:[],\n}\nconst actions = {\n    async categoryList({commit}){\n        let result = await reqCategoryList();\n        if (result.code ==200) {\n            commit('CATEGORYLIST', result.data)\n        }\n    },\n    async bannerList({commit}){\n        let result = await reqBannerList();\n        if (result.code ==200) {\n            commit('BANNERLIST', result.data)\n        }\n    },\n    async floorList({commit}){\n        let result = await reqFloorList();\n        if (result.code ==200) {\n            commit('FLOORLIST', result.data)\n        }\n    }\n}\nconst mutations = {\n    CATEGORYLIST(state, categoryList) {\n        state.categoryList = categoryList\n    },\n    BANNERLIST(state, bannerList) {\n        state.bannerList = bannerList\n    },\n    FLOORLIST(state, floorList) {\n        state.floorList = floorList\n    }\n}\nconst getters = {}\n\nexport default {\n    // ...\n    state,\n    actions,\n    mutations,\n    getters\n}"],"mappings":"AAAA,SAASA,eAAT,EAAyBC,aAAzB,EAAuCC,YAAvC,QAA2D,OAA3D;AAEA,MAAMC,KAAK,GAAG;EACVC,YAAY,EAAC,EADH;EAEVC,UAAU,EAAC,EAFD;EAGVC,SAAS,EAAC;AAHA,CAAd;AAKA,MAAMC,OAAO,GAAG;EACZ,MAAMH,YAAN,CAAmB;IAACI;EAAD,CAAnB,EAA4B;IACxB,IAAIC,MAAM,GAAG,MAAMT,eAAe,EAAlC;;IACA,IAAIS,MAAM,CAACC,IAAP,IAAc,GAAlB,EAAuB;MACnBF,MAAM,CAAC,cAAD,EAAiBC,MAAM,CAACE,IAAxB,CAAN;IACH;EACJ,CANW;;EAOZ,MAAMN,UAAN,CAAiB;IAACG;EAAD,CAAjB,EAA0B;IACtB,IAAIC,MAAM,GAAG,MAAMR,aAAa,EAAhC;;IACA,IAAIQ,MAAM,CAACC,IAAP,IAAc,GAAlB,EAAuB;MACnBF,MAAM,CAAC,YAAD,EAAeC,MAAM,CAACE,IAAtB,CAAN;IACH;EACJ,CAZW;;EAaZ,MAAML,SAAN,CAAgB;IAACE;EAAD,CAAhB,EAAyB;IACrB,IAAIC,MAAM,GAAG,MAAMP,YAAY,EAA/B;;IACA,IAAIO,MAAM,CAACC,IAAP,IAAc,GAAlB,EAAuB;MACnBF,MAAM,CAAC,WAAD,EAAcC,MAAM,CAACE,IAArB,CAAN;IACH;EACJ;;AAlBW,CAAhB;AAoBA,MAAMC,SAAS,GAAG;EACdC,YAAY,CAACV,KAAD,EAAQC,YAAR,EAAsB;IAC9BD,KAAK,CAACC,YAAN,GAAqBA,YAArB;EACH,CAHa;;EAIdU,UAAU,CAACX,KAAD,EAAQE,UAAR,EAAoB;IAC1BF,KAAK,CAACE,UAAN,GAAmBA,UAAnB;EACH,CANa;;EAOdU,SAAS,CAACZ,KAAD,EAAQG,SAAR,EAAmB;IACxBH,KAAK,CAACG,SAAN,GAAkBA,SAAlB;EACH;;AATa,CAAlB;AAWA,MAAMU,OAAO,GAAG,EAAhB;AAEA,eAAe;EACX;EACAb,KAFW;EAGXI,OAHW;EAIXK,SAJW;EAKXI;AALW,CAAf"},"metadata":{},"sourceType":"module"}