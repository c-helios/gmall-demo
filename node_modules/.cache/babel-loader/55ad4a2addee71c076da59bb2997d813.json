{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hcw/vueProjects/gmall/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/hcw/vueProjects/gmall/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { reqCategoryList, reqBannerList, reqFloorList } from '@/api';\nvar state = {\n  categoryList: [],\n  bannerList: []\n};\nvar actions = {\n  categoryList: function categoryList(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var commit, result;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqCategoryList();\n\n            case 3:\n              result = _context.sent;\n\n              if (result.code == 200) {\n                commit('CATEGORYLIST', result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  bannerList: function bannerList(_ref2) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var commit, result;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqBannerList();\n\n            case 3:\n              result = _context2.sent;\n\n              if (result.code == 200) {\n                commit('BANNERLIST', result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  floorList: function floorList(_ref3) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var commit, result;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return reqFloorList();\n\n            case 3:\n              result = _context3.sent;\n\n              if (result.code == 200) {\n                commit('FLOORLIST', result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }\n};\nvar mutations = {\n  CATEGORYLIST: function CATEGORYLIST(state, categoryList) {\n    state.categoryList = categoryList;\n  },\n  BANNERLIST: function BANNERLIST(state, bannerList) {\n    state.bannerList = bannerList;\n  },\n  FLOORLIST: function FLOORLIST(state, floorList) {\n    state.floorList = bannerList;\n  }\n};\nvar getters = {};\nexport default {\n  // ...\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};","map":{"version":3,"names":["reqCategoryList","reqBannerList","reqFloorList","state","categoryList","bannerList","actions","commit","result","code","data","floorList","mutations","CATEGORYLIST","BANNERLIST","FLOORLIST","getters"],"sources":["/Users/hcw/vueProjects/gmall/src/store/home/index.js"],"sourcesContent":["import { reqCategoryList,reqBannerList,reqFloorList } from '@/api'\n\nconst state = {\n    categoryList:[],\n    bannerList:[],\n}\nconst actions = {\n    async categoryList({commit}){\n        let result = await reqCategoryList();\n        if (result.code ==200) {\n            commit('CATEGORYLIST', result.data)\n        }\n    },\n    async bannerList({commit}){\n        let result = await reqBannerList();\n        if (result.code ==200) {\n            commit('BANNERLIST', result.data)\n        }\n    },\n    async floorList({commit}){\n        let result = await reqFloorList();\n        if (result.code ==200) {\n            commit('FLOORLIST', result.data)\n        }\n    }\n}\nconst mutations = {\n    CATEGORYLIST(state, categoryList) {\n        state.categoryList = categoryList\n    },\n    BANNERLIST(state, bannerList) {\n        state.bannerList = bannerList\n    },\n    FLOORLIST(state, floorList) {\n        state.floorList = bannerList\n    }\n}\nconst getters = {}\n\nexport default {\n    // ...\n    state,\n    actions,\n    mutations,\n    getters\n}"],"mappings":";;AAAA,SAASA,eAAT,EAAyBC,aAAzB,EAAuCC,YAAvC,QAA2D,OAA3D;AAEA,IAAMC,KAAK,GAAG;EACVC,YAAY,EAAC,EADH;EAEVC,UAAU,EAAC;AAFD,CAAd;AAIA,IAAMC,OAAO,GAAG;EACNF,YADM,8BACgB;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAARG,MAAQ,QAARA,MAAQ;cAAA;cAAA,OACLP,eAAe,EADV;;YAAA;cACpBQ,MADoB;;cAExB,IAAIA,MAAM,CAACC,IAAP,IAAc,GAAlB,EAAuB;gBACnBF,MAAM,CAAC,cAAD,EAAiBC,MAAM,CAACE,IAAxB,CAAN;cACH;;YAJuB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAK3B,CANW;EAONL,UAPM,6BAOc;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAARE,MAAQ,SAARA,MAAQ;cAAA;cAAA,OACHN,aAAa,EADV;;YAAA;cAClBO,MADkB;;cAEtB,IAAIA,MAAM,CAACC,IAAP,IAAc,GAAlB,EAAuB;gBACnBF,MAAM,CAAC,YAAD,EAAeC,MAAM,CAACE,IAAtB,CAAN;cACH;;YAJqB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAKzB,CAZW;EAaNC,SAbM,4BAaa;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAARJ,MAAQ,SAARA,MAAQ;cAAA;cAAA,OACFL,YAAY,EADV;;YAAA;cACjBM,MADiB;;cAErB,IAAIA,MAAM,CAACC,IAAP,IAAc,GAAlB,EAAuB;gBACnBF,MAAM,CAAC,WAAD,EAAcC,MAAM,CAACE,IAArB,CAAN;cACH;;YAJoB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAKxB;AAlBW,CAAhB;AAoBA,IAAME,SAAS,GAAG;EACdC,YADc,wBACDV,KADC,EACMC,YADN,EACoB;IAC9BD,KAAK,CAACC,YAAN,GAAqBA,YAArB;EACH,CAHa;EAIdU,UAJc,sBAIHX,KAJG,EAIIE,UAJJ,EAIgB;IAC1BF,KAAK,CAACE,UAAN,GAAmBA,UAAnB;EACH,CANa;EAOdU,SAPc,qBAOJZ,KAPI,EAOGQ,SAPH,EAOc;IACxBR,KAAK,CAACQ,SAAN,GAAkBN,UAAlB;EACH;AATa,CAAlB;AAWA,IAAMW,OAAO,GAAG,EAAhB;AAEA,eAAe;EACX;EACAb,KAAK,EAALA,KAFW;EAGXG,OAAO,EAAPA,OAHW;EAIXM,SAAS,EAATA,SAJW;EAKXI,OAAO,EAAPA;AALW,CAAf"},"metadata":{},"sourceType":"module"}