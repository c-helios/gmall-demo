{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hcw/vueProjects/gmall/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/hcw/vueProjects/gmall/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { reqSearchList } from '@/api';\nvar state = {\n  searchList: []\n};\nvar actions = {\n  searchList: function searchList(_ref, params) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var commit, result;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqSearchList(params);\n\n            case 3:\n              result = _context.sent;\n\n              if (result.code == 200) {\n                commit('SEARCHLIST', result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};\nvar mutations = {\n  SEARCHLIST: function SEARCHLIST(state, searchList) {\n    state.searchList = searchList;\n  }\n};\nvar getters = {\n  trademarkList: function trademarkList() {}\n};\nexport default {\n  // ...\n  state: state,\n  actions: actions,\n  mutations: mutations,\n  getters: getters\n};","map":{"version":3,"names":["reqSearchList","state","searchList","actions","params","commit","result","code","data","mutations","SEARCHLIST","getters","trademarkList"],"sources":["/Users/hcw/vueProjects/gmall/src/store/search/index.js"],"sourcesContent":["import {reqSearchList} from '@/api'\nconst state = {\n    searchList:[],\n}\n\nconst actions = {\n    async searchList({commit}, params){\n        let result = await reqSearchList(params)\n        if(result.code == 200) {\n            commit('SEARCHLIST', result.data)\n        }\n    },\n\n}\nconst mutations = {\n    SEARCHLIST(state, searchList){\n        state.searchList =  searchList\n    }\n}\nconst getters = {\n    trademarkList() {\n        \n    }\n}\n\nexport default {\n    // ...\n    state,\n    actions,\n    mutations,\n    getters\n}"],"mappings":";;AAAA,SAAQA,aAAR,QAA4B,OAA5B;AACA,IAAMC,KAAK,GAAG;EACVC,UAAU,EAAC;AADD,CAAd;AAIA,IAAMC,OAAO,GAAG;EACND,UADM,4BACeE,MADf,EACsB;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAhBC,MAAgB,QAAhBA,MAAgB;cAAA;cAAA,OACXL,aAAa,CAACI,MAAD,CADF;;YAAA;cAC1BE,MAD0B;;cAE9B,IAAGA,MAAM,CAACC,IAAP,IAAe,GAAlB,EAAuB;gBACnBF,MAAM,CAAC,YAAD,EAAeC,MAAM,CAACE,IAAtB,CAAN;cACH;;YAJ6B;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAKjC;AANW,CAAhB;AASA,IAAMC,SAAS,GAAG;EACdC,UADc,sBACHT,KADG,EACIC,UADJ,EACe;IACzBD,KAAK,CAACC,UAAN,GAAoBA,UAApB;EACH;AAHa,CAAlB;AAKA,IAAMS,OAAO,GAAG;EACZC,aADY,2BACI,CAEf;AAHW,CAAhB;AAMA,eAAe;EACX;EACAX,KAAK,EAALA,KAFW;EAGXE,OAAO,EAAPA,OAHW;EAIXM,SAAS,EAATA,SAJW;EAKXE,OAAO,EAAPA;AALW,CAAf"},"metadata":{},"sourceType":"module"}