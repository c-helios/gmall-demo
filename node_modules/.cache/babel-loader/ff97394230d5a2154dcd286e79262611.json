{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\n//配置路由的地方\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport routes from '@/router/routes'; //使用插件\n\nVue.use(VueRouter);\nvar originPush = VueRouter.prototype.push;\nvar originReplace = VueRouter.prototype.replace; //重写push｜replace\n//第一个参数：告诉原来push方法，你往哪里跳转（传递哪些参数）\n\nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    // call|apply区别\n    //相同点：都可以调用函数，都可以篡改函数的上下文\n    //不同点：call与apply传递参数，call传递参数用逗号隔开，appley方法执行，传递数组\n    originPush.call(this, location, resolve, reject);\n  } else {\n    originPush.call(this, location, function () {}, function () {});\n  }\n};\n\nVueRouter.prototype.replace = function (location, resolve, reject) {\n  if (resolve && reject) {\n    // call|apply区别\n    //相同点：都可以调用函数，都可以篡改函数的上下文\n    //不同点：call与apply传递参数，call传递参数用逗号隔开，appley方法执行，传递数组\n    originReplace.call(this, location, resolve, reject);\n  } else {\n    originReplace.call(this, location, function () {}, function () {});\n  }\n}; //配置路由\n\n\nexport default new VueRouter({\n  //配置路由\n  routes: router\n});","map":{"version":3,"names":["Vue","VueRouter","routes","use","originPush","prototype","push","originReplace","replace","location","resolve","reject","call","router"],"sources":["/Users/hcw/vueProjects/gmall/src/router/index.js"],"sourcesContent":["//配置路由的地方\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\n\nimport routes from '@/router/routes'\n\n//使用插件\nVue.use(VueRouter)\n\nlet originPush = VueRouter.prototype.push\nlet originReplace = VueRouter.prototype.replace\n\n//重写push｜replace\n//第一个参数：告诉原来push方法，你往哪里跳转（传递哪些参数）\nVueRouter.prototype.push = function(location,resolve,reject) {\n    if(resolve && reject) {\n        // call|apply区别\n        //相同点：都可以调用函数，都可以篡改函数的上下文\n        //不同点：call与apply传递参数，call传递参数用逗号隔开，appley方法执行，传递数组\n        originPush.call(this,location,resolve,reject)\n    } else {\n        originPush.call(this,location,() => {},() => {})\n    }\n}\n\nVueRouter.prototype.replace = function(location,resolve,reject) {\n    if(resolve && reject) {\n        // call|apply区别\n        //相同点：都可以调用函数，都可以篡改函数的上下文\n        //不同点：call与apply传递参数，call传递参数用逗号隔开，appley方法执行，传递数组\n        originReplace.call(this,location,resolve,reject)\n    }else{\n        originReplace.call(this,location,() => {},() => {})\n    }\n}\n\n//配置路由\nexport default new VueRouter({\n    //配置路由\n    routes:router\n})"],"mappings":";AAAA;AACA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,iBAAnB,C,CAEA;;AACAF,GAAG,CAACG,GAAJ,CAAQF,SAAR;AAEA,IAAIG,UAAU,GAAGH,SAAS,CAACI,SAAV,CAAoBC,IAArC;AACA,IAAIC,aAAa,GAAGN,SAAS,CAACI,SAAV,CAAoBG,OAAxC,C,CAEA;AACA;;AACAP,SAAS,CAACI,SAAV,CAAoBC,IAApB,GAA2B,UAASG,QAAT,EAAkBC,OAAlB,EAA0BC,MAA1B,EAAkC;EACzD,IAAGD,OAAO,IAAIC,MAAd,EAAsB;IAClB;IACA;IACA;IACAP,UAAU,CAACQ,IAAX,CAAgB,IAAhB,EAAqBH,QAArB,EAA8BC,OAA9B,EAAsCC,MAAtC;EACH,CALD,MAKO;IACHP,UAAU,CAACQ,IAAX,CAAgB,IAAhB,EAAqBH,QAArB,EAA8B,YAAM,CAAE,CAAtC,EAAuC,YAAM,CAAE,CAA/C;EACH;AACJ,CATD;;AAWAR,SAAS,CAACI,SAAV,CAAoBG,OAApB,GAA8B,UAASC,QAAT,EAAkBC,OAAlB,EAA0BC,MAA1B,EAAkC;EAC5D,IAAGD,OAAO,IAAIC,MAAd,EAAsB;IAClB;IACA;IACA;IACAJ,aAAa,CAACK,IAAd,CAAmB,IAAnB,EAAwBH,QAAxB,EAAiCC,OAAjC,EAAyCC,MAAzC;EACH,CALD,MAKK;IACDJ,aAAa,CAACK,IAAd,CAAmB,IAAnB,EAAwBH,QAAxB,EAAiC,YAAM,CAAE,CAAzC,EAA0C,YAAM,CAAE,CAAlD;EACH;AACJ,CATD,C,CAWA;;;AACA,eAAe,IAAIR,SAAJ,CAAc;EACzB;EACAC,MAAM,EAACW;AAFkB,CAAd,CAAf"},"metadata":{},"sourceType":"module"}